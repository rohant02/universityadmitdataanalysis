ggsave("distribution_of_acceptance_rate.png", p4)
ggsave("distribution_of_enrollment_rate.png", p5)
ggsave("distribution_of_graduation_rate.png", p6)
ggsave("applications_by_institution_type.png", p7)
ggsave("acceptances
data <- read.csv('Kmeans_assignment_data.csv')
postcode <- read.csv("usn/USNews-College-Scraper/data.csv")
postcode <- read.csv("/usn/USNews-College-Scraper/data.csv")
library(readr)
data <- read_csv("usn/USNews-College-Scraper/data.csv")
View(data)
postcode <- read_csv("usn/USNews-College-Scraper/data.csv")
library(dplyr)
library(tidyr)
library(gridExtra)
library(corrplot)
data <- read.csv('Kmeans_assignment_data.csv')
postcode <- read_csv("usn/USNews-College-Scraper/data.csv")
postcodes1 <- postcode %>%
select(institution.displayName, institution.zip)
merged_data <- merge(data, postcodes, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
merged_data <- merge(data, postcodes1, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
colSums(is.na(merged_data))
# Install required packages if not already installed
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("maps")
install.packages("ggmap")
# Load required libraries
library(ggplot2)
library(dplyr)
library(maps)
library(ggmap)
# Function to geocode zip codes
geocode_zip <- function(zip) {
result <- geocode(as.character(zip), source = "dsk")
return(result)
}
geocoded_data <- merged_data %>%
filter(!is.na(institution.zip)) %>%
mutate(geocode = purrr::map(institution.zip, geocode_zip)) %>%
unnest(cols = c(geocode))
dplyr::last_dplyr_warnings()
install.packages("ggmap")
install.packages("zipcodeR")
# Load required libraries
library(ggplot2)
library(dplyr)
library(maps)
library(ggmap)
library(zipcodeR)
data <- read.csv('Kmeans_assignment_data.csv')
postcode <- read_csv("usn/USNews-College-Scraper/data.csv")
postcodes1 <- postcode %>%
select(institution.displayName, institution.zip)
merged_data <- merge(data, postcodes1, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
colSums(is.na(merged_data))
filtered_data <- merged_data %>%
filter(!is.na(institution.zip))
# Geocode the zip codes using zipcodeR
geocoded_data <- filtered_data %>%
mutate(geocode = purrr::map(institution.zip, ~zipcodeR::geocode_zip(.x))) %>%
unnest(cols = c(geocode))
# View the geocoded data
head(geocoded_data)
# Get the map of the USA
usa_map <- map_data("state")
# Plot the universities on the map
ggplot() +
geom_polygon(data = usa_map, aes(x = long, y = lat, group = group), fill = "lightgrey", color = "white") +
geom_point(data = geocoded_data, aes(x = lng, y = lat), color = "red", size = 2, alpha = 0.7) +
labs(title = "Universities in the USA", x = "Longitude", y = "Latitude") +
theme_minimal()
library(dplyr)
library(purrr)
library(zipcodeR)
library(ggplot2)
library(maps)
# Read the data
data <- read.csv('Kmeans_assignment_data.csv')
postcode <- read.csv("usn/USNews-College-Scraper/data.csv")
# Select relevant columns from postcode data
postcodes1 <- postcode %>%
select(institution.displayName, institution.zip)
# Merge data with postcode data
merged_data <- merge(data, postcodes1, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
# Check for missing values
colSums(is.na(merged_data))
# Filter out rows with missing institution.zip
filtered_data <- merged_data %>%
filter(!is.na(institution.zip))
# Define a safe version of geocode_zip with a fallback value
safe_geocode_zip <- possibly(function(zip) {
result <- zipcodeR::geocode_zip(zip)
if (nrow(result) == 0) {
data.frame(lat = NA, lng = NA)
} else {
result
}
}, otherwise = data.frame(lat = NA, lng = NA))
# Geocode the zip codes using the safe function
geocoded_data <- filtered_data %>%
mutate(geocode = map(institution.zip, ~ safe_geocode_zip(.x))) %>%
unnest(cols = c(geocode))
# View the geocoded data
head(geocoded_data)
# Get the map of the USA
usa_map <- map_data("state")
# Plot the universities on the map
ggplot() +
geom_polygon(data = usa_map, aes(x = long, y = lat, group = group), fill = "lightgrey", color = "white") +
geom_point(data = geocoded_data, aes(x = lng, y = lat), color = "red", size = 2, alpha = 0.7) +
labs(title = "Universities in the USA", x = "Longitude", y = "Latitude") +
theme_minimal()
# Plot the universities on the map
ggplot() +
geom_polygon(data = usa_map, aes(x = long, y = lat, group = group), fill = "lightgrey", color = "white") +
geom_point(data = filtered_geocoded_data, aes(x = lng, y = lat), color = "red", size = 2, alpha = 0.7) +
labs(title = "Universities in the USA", x = "Longitude", y = "Latitude") +
theme_minimal()
library(dplyr)
library(purrr)
library(zipcodeR)
library(ggplot2)
library(maps)
# Read the data
data <- read.csv('Kmeans_assignment_data.csv')
postcode <- read.csv("usn/USNews-College-Scraper/data.csv")
# Select relevant columns from postcode data
postcodes1 <- postcode %>%
select(institution.displayName, institution.zip)
# Merge data with postcode data
merged_data <- merge(data, postcodes1, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
# Check for missing values
colSums(is.na(merged_data))
# Filter out rows with missing institution.zip
filtered_data <- merged_data %>%
filter(!is.na(institution.zip))
# Define a safe version of geocode_zip with a fallback value
safe_geocode_zip <- possibly(function(zip) {
result <- zipcodeR::geocode_zip(zip)
if (nrow(result) == 0) {
data.frame(lat = NA, lng = NA)
} else {
result
}
}, otherwise = data.frame(lat = NA, lng = NA))
# Geocode the zip codes using the safe function
geocoded_data <- filtered_data %>%
mutate(geocode = map(institution.zip, ~ safe_geocode_zip(.x))) %>%
unnest(cols = c(geocode))
# Exclude coordinates with latitude > 50 and longitude < -140
filtered_geocoded_data <- geocoded_data %>%
filter(!(lat > 50 & long < -140))
library(dplyr)
library(purrr)
library(zipcodeR)
library(ggplot2)
library(maps)
# Read the data
data <- read.csv('Kmeans_assignment_data.csv')
postcode <- read.csv("usn/USNews-College-Scraper/data.csv")
# Select relevant columns from postcode data
postcodes1 <- postcode %>%
select(institution.displayName, institution.zip)
# Merge data with postcode data
merged_data <- merge(data, postcodes1, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
# Check for missing values
colSums(is.na(merged_data))
# Filter out rows with missing institution.zip
filtered_data <- merged_data %>%
filter(!is.na(institution.zip))
# Define a safe version of geocode_zip with a fallback value
safe_geocode_zip <- possibly(function(zip) {
result <- zipcodeR::geocode_zip(zip)
if (nrow(result) == 0) {
data.frame(lat = NA, lng = NA)
} else {
result
}
}, otherwise = data.frame(lat = NA, lng = NA))
# Geocode the zip codes using the safe function
geocoded_data <- filtered_data %>%
mutate(geocode = map(institution.zip, ~ safe_geocode_zip(.x))) %>%
unnest(cols = c(geocode))
# Exclude coordinates with latitude > 50 and longitude < -140
filtered_geocoded_data <- geocoded_data %>%
filter(!(lat > 50 & lng < -140))
# View the filtered geocoded data
head(filtered_geocoded_data)
# Get the map of the USA
usa_map <- map_data("state")
# Plot the universities on the map
ggplot() +
geom_polygon(data = usa_map, aes(x = long, y = lat, group = group), fill = "lightgrey", color = "white") +
geom_point(data = filtered_geocoded_data, aes(x = lng, y = lat), color = "red", size = 2, alpha = 0.7) +
labs(title = "Universities in the USA", x = "Longitude", y = "Latitude") +
theme_minimal()
head(filtered_geocoded_data)
filtergeo <- filtered_geocoded_data %>%
filter(!(lng > -140))
# View the filtered geocoded data
head(filtered_geocoded_data)
# Get the map of the USA
usa_map <- map_data("state")
# Plot the universities on the map
ggplot() +
geom_polygon(data = usa_map, aes(x = long, y = lat, group = group), fill = "lightgrey", color = "white") +
geom_point(data = filtered_geocoded_data, aes(x = lng, y = lat), color = "red", size = 2, alpha = 0.7) +
labs(title = "Universities in the USA", x = "Longitude", y = "Latitude") +
theme_minimal()
# Exclude coordinates with latitude > 50 and longitude < -140
filtered_geocoded_data <- geocoded_data %>%
filter(!(lat > 50 & lng < -140))
head(filtered_geocoded_data)
filtergeo <- filtered_geocoded_data %>%
filter(!(lat > 25 & lng > -140))
# View the filtered geocoded data
head(filtered_geocoded_data)
# Get the map of the USA
usa_map <- map_data("state")
# Plot the universities on the map
ggplot() +
geom_polygon(data = usa_map, aes(x = long, y = lat, group = group), fill = "lightgrey", color = "white") +
geom_point(data = filtered_geocoded_data, aes(x = lng, y = lat), color = "red", size = 2, alpha = 0.7) +
labs(title = "Universities in the USA", x = "Longitude", y = "Latitude") +
theme_minimal()
library(dplyr)
library(purrr)
library(zipcodeR)
library(ggplot2)
library(maps)
# Read the data
data <- read.csv('Kmeans_assignment_data.csv')
postcode <- read.csv("usn/USNews-College-Scraper/data.csv")
# Select relevant columns from postcode data
postcodes1 <- postcode %>%
select(institution.displayName, institution.zip)
# Merge data with postcode data
merged_data <- merge(data, postcodes1, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
# Check for missing values
colSums(is.na(merged_data))
# Filter out rows with missing institution.zip
filtered_data <- merged_data %>%
filter(!is.na(institution.zip))
# Define a safe version of geocode_zip with a fallback value
safe_geocode_zip <- possibly(function(zip) {
result <- zipcodeR::geocode_zip(zip)
if (nrow(result) == 0) {
data.frame(lat = NA, lng = NA)
} else {
result
}
}, otherwise = data.frame(lat = NA, lng = NA))
# Geocode the zip codes using the safe function
geocoded_data <- filtered_data %>%
mutate(geocode = map(institution.zip, ~ safe_geocode_zip(.x))) %>%
unnest(cols = c(geocode))
# Exclude coordinates with latitude > 50 and longitude < -140
filtered_geocoded_data <- geocoded_data %>%
filter(!(lat > 50 & lng < 140))
head(filtered_geocoded_data)
# filtergeo <- filtered_geocoded_data %>%
#   filter(!(lat > 25 & lng > -140))
# View the filtered geocoded data
head(filtered_geocoded_data)
# Get the map of the USA
usa_map <- map_data("state")
# Plot the universities on the map
ggplot() +
geom_polygon(data = usa_map, aes(x = long, y = lat, group = group), fill = "lightgrey", color = "white") +
geom_point(data = filtered_geocoded_data, aes(x = lng, y = lat), color = "red", size = 2, alpha = 0.7) +
labs(title = "Universities in the USA", x = "Longitude", y = "Latitude") +
theme_minimal()
filtered_geocoded_data$lng
summary(filtered_geocoded_data$lng)
library(dplyr)
library(purrr)
library(zipcodeR)
library(ggplot2)
library(maps)
# Read the data
data <- read.csv('Kmeans_assignment_data.csv')
postcode <- read.csv("usn/USNews-College-Scraper/data.csv")
# Select relevant columns from postcode data
postcodes1 <- postcode %>%
select(institution.displayName, institution.zip)
# Merge data with postcode data
merged_data <- merge(data, postcodes1, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
# Check for missing values
colSums(is.na(merged_data))
# Filter out rows with missing institution.zip
filtered_data <- merged_data %>%
filter(!is.na(institution.zip))
# Define a safe version of geocode_zip with a fallback value
safe_geocode_zip <- possibly(function(zip) {
result <- zipcodeR::geocode_zip(zip)
if (nrow(result) == 0) {
data.frame(lat = NA, lng = NA)
} else {
result
}
}, otherwise = data.frame(lat = NA, lng = NA))
# Geocode the zip codes using the safe function
geocoded_data <- filtered_data %>%
mutate(geocode = map(institution.zip, ~ safe_geocode_zip(.x))) %>%
unnest(cols = c(geocode))
# Exclude coordinates with latitude > 50 and longitude < -140
filtered_geocoded_data <- geocoded_data %>%
filter(!(lat > 50 & lng < -140))
head(filtered_geocoded_data)
filtergeo <- filtered_geocoded_data %>%
filter(!(lat > 25 & lng > -140))
# Plot the universities on the map
ggplot() +
geom_polygon(data = usa_map, aes(x = long, y = lat, group = group), fill = "lightgrey", color = "white") +
geom_point(data = filtergeo, aes(x = lng, y = lat), color = "red", size = 2, alpha = 0.7) +
labs(title = "Universities in the USA", x = "Longitude", y = "Latitude") +
theme_minimal()
filtergeo$lng
library(dplyr)
library(purrr)
library(zipcodeR)
library(ggplot2)
library(maps)
# Read the data
data <- read.csv('Kmeans_assignment_data.csv')
postcode <- read.csv("usn/USNews-College-Scraper/data.csv")
# Select relevant columns from postcode data
postcodes1 <- postcode %>%
select(institution.displayName, institution.zip)
# Merge data with postcode data
merged_data <- merge(data, postcodes1, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
# Check for missing values
colSums(is.na(merged_data))
# Filter out rows with missing institution.zip
filtered_data <- merged_data %>%
filter(!is.na(institution.zip))
# Define a safe version of geocode_zip with a fallback value
safe_geocode_zip <- possibly(function(zip) {
result <- zipcodeR::geocode_zip(zip)
if (nrow(result) == 0) {
data.frame(lat = NA, lng = NA)
} else {
result
}
}, otherwise = data.frame(lat = NA, lng = NA))
# Geocode the zip codes using the safe function
geocoded_data <- filtered_data %>%
mutate(geocode = map(institution.zip, ~ safe_geocode_zip(.x))) %>%
unnest(cols = c(geocode))
# Exclude coordinates with latitude > 50 and longitude < -140
filtered_geocoded_data <- geocoded_data %>%
filter(!(lat > 50 & lng < -140))
head(filtered_geocoded_data)
#
# filtergeo <- filtered_geocoded_data %>%
#   filter(!(lat > 25 & lng > -140))
# View the filtered geocoded data
# head(filtered_geocoded_data)
#
# summary(filtered_geocoded_data$lng)
filtergeo$lng
# Get the map of the USA
usa_map <- map_data("state")
# Plot the universities on the map
ggplot() +
geom_polygon(data = usa_map, aes(x = long, y = lat, group = group), fill = "lightgrey", color = "white") +
geom_point(data = filtered_geocoded_data, aes(x = lng, y = lat), color = "red", size = 2, alpha = 0.7) +
labs(title = "Universities in the USA", x = "Longitude", y = "Latitude") +
theme_minimal()
library(dplyr)
library(purrr)
library(zipcodeR)
library(ggplot2)
library(maps)
# Read the data
data <- read.csv('Kmeans_assignment_data.csv')
postcode <- read.csv("usn/USNews-College-Scraper/data.csv")
# Select relevant columns from postcode data
postcodes1 <- postcode %>%
select(institution.displayName, institution.zip)
# Merge data with postcode data
merged_data <- merge(data, postcodes1, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
filtered_data <- merged_data %>%
filter(!is.na(institution.zip))
# Geocode the zip codes using zipcodeR
geocoded_data <- filtered_data %>%
mutate(geocode = purrr::map(institution.zip, ~zipcodeR::geocode_zip(.x))) %>%
unnest(cols = c(geocode))
library(dplyr)
library(purrr)
library(zipcodeR)
library(ggplot2)
library(maps)
# Read the data
data <- read.csv('Kmeans_assignment_data.csv')
postcode <- read.csv("usn/USNews-College-Scraper/data.csv")
# Select relevant columns from postcode data
postcodes1 <- postcode %>%
select(institution.displayName, institution.zip)
# Merge data with postcode data
merged_data <- merge(data, postcodes1, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
filtered_data <- merged_data %>%
filter(!is.na(institution.zip))
# Define a function to check if a ZIP code is valid
is_valid_zip <- function(zip) {
!is.null(zipcodeR::geocode_zip(zip))
}
# Filter out invalid ZIP codes
valid_data <- filtered_data %>%
filter(sapply(institution.zip, is_valid_zip))
# Geocode the valid zip codes using zipcodeR
geocoded_data <- valid_data %>%
mutate(geocode = purrr::map(institution.zip, ~zipcodeR::geocode_zip(.x))) %>%
unnest(cols = c(geocode))
# Filter out invalid coordinates (latitude and longitude ranges for the contiguous USA)
geocoded_data <- geocoded_data %>%
filter(lat >= 24 & lat <= 49, lng >= -125 & lng <= -66)
# Merge data with postcode data
merged_data <- merge(data, postcodes1, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
filtered_data <- merged_data %>%
filter(!is.na(institution.zip))
# Define a function to check if a ZIP code is valid
is_valid_zip <- function(zip) {
!is.null(zipcodeR::geocode_zip(zip))
}
# Filter out invalid ZIP codes
valid_data <- filtered_data %>%
filter(sapply(institution.zip, is_valid_zip))
# Geocode the valid zip codes using zipcodeR
geocoded_data <- valid_data %>%
mutate(geocode = purrr::map(institution.zip, ~zipcodeR::geocode_zip(.x))) %>%
unnest(cols = c(geocode))
# Filter out invalid coordinates (latitude and longitude ranges for the contiguous USA)
geocoded_data <- geocoded_data %>%
filter(lat >= 24 & lat <= 49, lng >= -125 & lng <= -66)
# View the geocoded data
head(geocoded_data)
# Get the map of the USA
usa_map <- map_data("state")
# Plot the universities on the map
ggplot() +
geom_polygon(data = usa_map, aes(x = long, y = lat, group = group), fill = "lightgrey", color = "white") +
geom_point(data = geocoded_data, aes(x = lng, y = lat), color = "red", size = 2, alpha = 0.7) +
labs(title = "Universities in the USA", x = "Longitude", y = "Latitude") +
theme_minimal()
library(dplyr)
library(purrr)
library(zipcodeR)
library(ggplot2)
library(maps)
# Read the data
data <- read.csv('Kmeans_assignment_data.csv')
postcode <- read.csv("usn/USNews-College-Scraper/data.csv")
# Select relevant columns from postcode data
postcodes1 <- postcode %>%
select(institution.displayName, institution.zip)
# Merge data with postcode data
merged_data <- merge(data, postcodes1, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
filtered_data <- merged_data %>%
filter(!is.na(institution.zip))
# Define a function to check if a ZIP code is valid
is_valid_zip <- function(zip) {
!is.null(zipcodeR::geocode_zip(zip))
}
# Filter out invalid ZIP codes
valid_data <- filtered_data %>%
filter(sapply(institution.zip, is_valid_zip))
library(dplyr)
library(purrr)
library(zipcodeR)
library(ggplot2)
library(maps)
# Read the data
data <- read.csv('Kmeans_assignment_data.csv')
postcode <- read.csv("usn/USNews-College-Scraper/data.csv")
# Select relevant columns from postcode data
postcodes1 <- postcode %>%
select(institution.displayName, institution.zip)
# Merge data with postcode data
merged_data <- merge(data, postcodes1, by.x = "X", by.y = "institution.displayName", all.x = TRUE)
filtered_data <- merged_data %>%
filter(!is.na(institution.zip))
# Define a function to check if a ZIP code is valid using tryCatch
is_valid_zip <- function(zip) {
tryCatch({
!is.null(zipcodeR::geocode_zip(zip))
}, error = function(e) {
FALSE
})
}
# Filter out invalid ZIP codes
valid_data <- filtered_data %>%
filter(sapply(institution.zip, is_valid_zip))
# Geocode the valid zip codes using zipcodeR
geocoded_data <- valid_data %>%
mutate(geocode = map(institution.zip, ~zipcodeR::geocode_zip(.x))) %>%
unnest(cols = c(geocode))
# Filter out invalid coordinates (latitude and longitude ranges for the contiguous USA)
geocoded_data <- geocoded_data %>%
filter(lat >= 24 & lat <= 49, lng >= -125 & lng <= -66)
# View the geocoded data
head(geocoded_data)
# Get the map of the USA
usa_map <- map_data("state")
# Plot the universities on the map
ggplot() +
geom_polygon(data = usa_map, aes(x = long, y = lat, group = group), fill = "lightgrey", color = "white") +
geom_point(data = geocoded_data, aes(x = lng, y = lat), color = "red", size = 2, alpha = 0.7) +
labs(title = "Universities in the USA", x = "Longitude", y = "Latitude") +
theme_minimal()
